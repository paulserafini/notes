#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../theme.css">

#+NAME: add-bars
#+BEGIN_SRC emacs-lisp :exports none :results output
  (load-file "../bars.el")
#+END_SRC
#+CALL: add-bars()

#+TITLE: Create a forest plot table in ggplot

# https://i.stack.imgur.com/jy4Ar.png

#+BEGIN_SRC R :session tmp :exports both :file ./img/ggforestplot.svg :results output graphics :width 8 :height 2
  library(dplyr)
  library(ggplot2)
  library(tidyr)
  library(gridExtra)
  library(grid)

  # https://stackoverflow.com/a/10813583
  base_breaks_x <- function(b){
    l <- format(b, trim=TRUE, scientific=FALSE, drop0trailing=TRUE)
    d <- data.frame(y=-Inf, yend=-Inf, x=min(b), xend=max(b))
    list(geom_segment(data=d, aes(x=x, y=y, xend=xend, yend=yend), inherit.aes=FALSE),
         scale_x_continuous(breaks=b, labels=l))
  }

  theme.text <- theme(
    axis.line = element_blank(), 
    axis.text.x = element_text(colour="white", size=6), 
    axis.text.y = element_blank(),
    axis.ticks = element_blank(), 
    axis.title.x = element_blank(), 
    axis.title.y = element_blank(), 
    axis.ticks.length.y = unit(0, "mm"),
    legend.position = "none", 
    panel.background = element_rect(fill = "transparent"), 
    panel.border = element_blank(), 
    axis.line.x = element_line(colour="white"),
    plot.margin = unit(c(5, 0, 5, 0), "mm"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank())

  theme.plot <- theme(
    axis.line = element_blank(), 
    axis.text.y = element_blank(),
    axis.text.x = element_text(size=6),
    axis.ticks.y = element_blank(),
    #axis.line.x = element
    #axis.line.x = element_line(colour="black"),
    axis.title.x = element_blank(), 
    axis.title.y = element_blank(), 
    axis.ticks.length.y = unit(0, "mm"),
    legend.position = "none", 
    panel.background = element_rect(fill = "transparent"), 
    panel.border = element_blank(), 
    plot.margin = unit(c(5, 0, 5, 0), "mm"),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank())


  ## Example data
  ID <- 6:1
  study <- c("Trial", "Trial 1", "Trial 2", "Trial 3", "Trial 4", "Summary")
  MD <- c(NA, 0.18, -0.84, 1.60, 0.33, 0.2)
  LL <- c(NA, -0.60, -0.91, -0.39, -0.29, 0.1)
  UL <- c(NA, 0.97, -0.76, 3.58, 0.95, 0.3)
  weight <- UL - LL
  estimate <- c("MD [95% CI]", "0.18 [-0.60, 0.97]", "-0.84 [-0.91, -0.76]", "1.60 [-0.39, 3.58]", "0.33 [-0.29, 0.95]", "0.1 [0.2, 0.3]")
  P <- c("P", 0.71, 0.40, 0.33, 0.76, 0.01)
  summary <- c(TRUE, FALSE, FALSE, FALSE, FALSE, TRUE)
  data <- data.frame(ID, study, MD, LL, UL, weight, estimate, P, summary, stringsAsFactors = FALSE)
  data %>%
    gather(key, value, study, estimate, P) -> data

  # Make sure gray bar is on the first line
  j <- ifelse(length(unique(data$ID)) %% 2 == 0, 0, 1)

  ## Left plot

  data %>%
    filter(key == "study") %>%
    mutate_at(vars(ID, key, value), factor) -> left.data

  left.data %>%
    ggplot() +
      geom_rect(aes(xmin=min(as.numeric(key))-0.1, xmax=Inf,
                    ymin=as.numeric(ID)-0.5, ymax=as.numeric(ID)+0.5),
                fill=ifelse(as.numeric(left.data$ID) %% 2 == j | left.data$summary, "white", "#f1f1f2")) +
      geom_text(aes(x = key, y = ID, label = value),
                fontface=ifelse(left.data$summary, "bold", "plain"),
                size = 2.5, hjust=0, vjust=0.5) +
      scale_x_discrete(expand=c(0, 2)) +
      scale_y_discrete() +
      theme.text -> left.panel


  ## Right plot

  data %>%
    filter(key != "study") %>%
    mutate_at(vars(ID, key, value), factor) -> right.data

  right.data %>%
    filter(key != "study") %>%
    ggplot() +
    geom_rect(aes(xmin=-Inf, xmax=max(as.numeric(key))+0.1,
                  ymin=as.numeric(ID)-0.5, ymax=as.numeric(ID)+0.5),
              fill=ifelse(as.numeric(right.data$ID) %% 2 == j | right.data$summary, "white", "#f1f1f2")) +
    geom_text(aes(x = key, y = ID, label = value),
              fontface=ifelse(right.data$summary, "bold", "plain"),
              size = 2.5, hjust=1) +
    scale_x_discrete(expand=c(0, 2)) +
    scale_y_discrete() +
    theme.text -> right.panel


  ## Middle/forest plot

  data %>%
    mutate_at(vars(ID, key, value), factor) -> middle.data

  middle.data %>%
    ggplot() +
    geom_rect(aes(xmin=-Inf, xmax=Inf,
                  ymin=as.numeric(ID)-0.5, ymax=as.numeric(ID)+0.5),
              fill=ifelse(as.numeric(middle.data$ID) %% 2 == j | middle.data$summary, "white", "#f1f1f2")) +
    geom_point(aes(y = ID, x = MD, size=weight), shape=15, na.rm=TRUE, color="pink") +
    scale_size(range = c(2, 5)) +
    geom_errorbarh(aes(y = ID, xmax = UL, xmin = LL), height = 0.15, na.rm=TRUE) +
    geom_segment(aes(x=0, xend=0, y=0.5, yend=length(unique(ID))-0.5), linetype=2, size=0.05) +
    coord_cartesian(xlim = c(-3.6, 3.6)) +
    scale_y_discrete() +
    theme.plot +
    base_breaks_x(seq(-3.6, 3.6, length.out=5)) -> middle.panel

  ## Put it all together
  grid.arrange(left.panel, middle.panel, right.panel, nrow = 1, widths = c(0.5, 0.75, 0.75))

  downViewport("arrange")
  downViewport("arrange.1-2-1-2")
  downViewport("axis-b.8-5-8-5")
  grid.text("Favors experimental", x=0.48, y=unit(-1, "mm"), just=c("right", "top"), gp=gpar(fontsize=9))
  grid.text("Favors placebo", x=0.52, y=unit(-1, "mm"), just=c("left", "top"), gp=gpar(fontsize=9))

#+END_SRC

#+RESULTS[dd3b1eeec41d146898b3a5c2986e4fb15b1cac3d]:
[[file:./img/ggforestplot.svg]]
