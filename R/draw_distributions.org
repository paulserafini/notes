#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="../theme.css">

#+NAME: add-bars
#+BEGIN_SRC emacs-lisp :exports none :results output
  (load-file "../bars.el")
#+END_SRC
#+CALL: add-bars()

#+TITLE: Draw and label theoretical distributions

#+BEGIN_SRC R :exports both :file ./img/H1.svg :results output graphics
  library(ggplot2)
  output1 <- ggplot(data.frame(x = c(-4, 4)), aes(x)) +
  theme_classic() +
  theme(axis.line.y = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        axis.title.y = element_blank(),
        axis.title.x = element_blank()) +
  stat_function(fun = dnorm) + 
  stat_function(fun = dnorm, xlim = c(-4,-1.96), color= "black",
                fill="lightblue", geom = "area") +
  stat_function(fun = dnorm, xlim = c(4,1.96), color= "black",
                fill="lightblue", geom = "area") +
  scale_x_continuous(limits = c(-4, 4),
                     breaks = c(-1.96, 0, 1.96)) +
  annotate("text", x = -2.25, y = 0.01, label = "alpha / 2", parse = T) +
  annotate("text", x = 2.25, y = 0.01, label = "alpha / 2", parse = T)
  print(output1)
#+END_SRC

#+RESULTS:
[[file:./img/H1.svg]]

#+BEGIN_SRC R :exports both :file ./img/H0_and_H1.svg :results output graphics
  library(ggplot2)
  output1 <- ggplot(data.frame(x = c(-4, 6)), aes(x)) +
  theme_classic() +
  theme(axis.line.y = element_blank(),
        axis.text.y = element_blank(),
        axis.ticks.y = element_blank(),
        axis.title.y = element_blank(),
        axis.title.x = element_blank()) +
  stat_function(fun = dnorm, color = "lightblue") + 
  stat_function(fun = dnorm, color = "lightgreen", args = list(2)) + 
  annotate("text", x = 0, y = 0.41, label = "H[0]", parse = T) +
  annotate("text", x = 2, y = 0.41, label = "H[1]", parse = T)
  print(output1)
#+END_SRC

#+RESULTS:
[[file:./img/H0_and_H1.svg]]
